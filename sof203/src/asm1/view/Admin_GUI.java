/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package asm1.view;

import asm1.entity.*;
//import entity.NhanVien;
import java.awt.Image;
import java.io.File;
import sof203.Reusable;
import java.sql.*;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
//import java.util.logging.Level;
//import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sammy Guergachi <sguergachi at gmail.com>
 */
public class Admin_GUI extends javax.swing.JFrame {

//Khai báo đủ các loại các biến Global<cho tiện :V>
    String maMon, tenMon, maLop, tenLop, maPhong, lichHoc;
    String maGV, tenGV, maSV, tenSV, email = "", mota = "", avatar = "", gender;
    LocalDate dob, start_date, end_date;
    //tạo formatter để format lại dữ liệu loại date từ database
    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
    String thongBao = "", databaseName = "app_schooling";
    int index = -1;
    Mon mon;
    Lop lop;
    GiangVien giangVien;
    SinhVien sinhVien;
    PhongHoc phongHoc;
    Reusable ru = new Reusable();
    ArrayList<Mon> dsMon = new ArrayList<>();
    ArrayList<Lop> dsLop = new ArrayList<>();
    ArrayList<GiangVien> dsGV = new ArrayList<>();
    ArrayList<SinhVien> dsSV = new ArrayList<>();
    ArrayList<PhongHoc> dsPH = new ArrayList<>();
    private String[] entities = new String[]{"mon", "lop", "giangVien", "sinhVien", "phongHoc"};

    /**
     * Creates new form Admin_GUI
     */
    public Admin_GUI() {
        initComponents();
        for (String entity : entities) {
            uploadDatabase(entity);
            fillToTable(entity);
        }
        show1stEle();
        this.setLocationRelativeTo(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblMonhoc = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        txtMamon = new javax.swing.JTextField();
        txtMonhoc = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        btnNew2 = new javax.swing.JButton();
        btnUpdate2 = new javax.swing.JButton();
        btnSave2 = new javax.swing.JButton();
        btnDel2 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        txtSearch2 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        cmbSort2 = new javax.swing.JComboBox<>();
        chkDes2 = new javax.swing.JCheckBox();
        btnSearch2 = new javax.swing.JButton();
        btnSort2 = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        txtMalop = new javax.swing.JTextField();
        txtLophoc = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        btnUpdate3 = new javax.swing.JButton();
        btnSave3 = new javax.swing.JButton();
        btnNew3 = new javax.swing.JButton();
        btnDel3 = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblLophoc = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        txtSearch = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cmbSort = new javax.swing.JComboBox<>();
        chkDes = new javax.swing.JCheckBox();
        btnSearch = new javax.swing.JButton();
        btnSort = new javax.swing.JButton();
        lblAvatarGV = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        txtMaGV = new javax.swing.JTextField();
        txtTenGV = new javax.swing.JTextField();
        txtDOBGV = new javax.swing.JTextField();
        txtEmailGV = new javax.swing.JTextField();
        txtMonGV = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMoTaGV = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtGenderGV = new javax.swing.JTextField();
        btnNew = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblGV = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        btnDel1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblSV = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        lblAvatarSV = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        txtMaSV = new javax.swing.JTextField();
        txtTenSV = new javax.swing.JTextField();
        txtDOBSV = new javax.swing.JTextField();
        txtEmailSV = new javax.swing.JTextField();
        txtLopSV = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtGenderSV = new javax.swing.JTextField();
        btnNew1 = new javax.swing.JButton();
        btnUpdate1 = new javax.swing.JButton();
        btnSave1 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        txtSearch1 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        cmbSort1 = new javax.swing.JComboBox<>();
        chkDes1 = new javax.swing.JCheckBox();
        btnSearch1 = new javax.swing.JButton();
        btnSort1 = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        txtSearch3 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        cmbSort3 = new javax.swing.JComboBox<>();
        chkDes3 = new javax.swing.JCheckBox();
        btnSearch3 = new javax.swing.JButton();
        btnSort3 = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        txtMaPhong = new javax.swing.JTextField();
        txtTenLopPH = new javax.swing.JTextField();
        txtTenGVPH = new javax.swing.JTextField();
        txtLichHoc = new javax.swing.JTextField();
        txtStartDate = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        txtEndDate = new javax.swing.JTextField();
        btnNew4 = new javax.swing.JButton();
        btnUpdate4 = new javax.swing.JButton();
        btnSave4 = new javax.swing.JButton();
        btnDel4 = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblPH = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblMonhoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Mã môn học", "Môn học"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMonhoc.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        tblMonhoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMonhocMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblMonhoc);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Môn học", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP));

        txtMamon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMamonActionPerformed(evt);
            }
        });

        txtMonhoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMonhocActionPerformed(evt);
            }
        });

        jLabel18.setText("Mã môn:");

        jLabel19.setText("Môn học:");

        btnNew2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asm1/resources/icons/plus.png"))); // NOI18N
        btnNew2.setText("New");
        btnNew2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNew2ActionPerformed(evt);
            }
        });

        btnUpdate2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asm1/resources/icons/loop-arrow.png"))); // NOI18N
        btnUpdate2.setText("Update");
        btnUpdate2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdate2ActionPerformed(evt);
            }
        });

        btnSave2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asm1/resources/icons/save.png"))); // NOI18N
        btnSave2.setText("Save");
        btnSave2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave2ActionPerformed(evt);
            }
        });

        btnDel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asm1/resources/icons/remove.png"))); // NOI18N
        btnDel2.setText("Delete");
        btnDel2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDel2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMamon, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMonhoc, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnNew2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSave2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDel2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdate2))
                        .addGap(13, 13, 13)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(txtMamon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(txtMonhoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNew2)
                    .addComponent(btnUpdate2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave2)
                    .addComponent(btnDel2))
                .addContainerGap())
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP));

        txtSearch2.setPreferredSize(new java.awt.Dimension(63, 24));

        jLabel24.setText("By:");

        cmbSort2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã môn", "Môn học", "Mã lớp", "Lớp học" }));

        chkDes2.setText("Descending");

        btnSearch2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asm1/resources/icons/search.png"))); // NOI18N
        btnSearch2.setText("Search");

        btnSort2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asm1/resources/icons/sorting.png"))); // NOI18N
        btnSort2.setText("Sort");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbSort2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkDes2, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addComponent(txtSearch2, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSort2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSearch2, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnSearch2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSort2))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(txtSearch2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel24)
                            .addComponent(cmbSort2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chkDes2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Lớp học", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP));

        txtMalop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMalopActionPerformed(evt);
            }
        });

        txtLophoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLophocActionPerformed(evt);
            }
        });

        jLabel20.setText("Mã lớp:");

        jLabel21.setText("Lớp học:");

        btnUpdate3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asm1/resources/icons/loop-arrow.png"))); // NOI18N
        btnUpdate3.setText("Update");
        btnUpdate3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdate3ActionPerformed(evt);
            }
        });

        btnSave3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asm1/resources/icons/save.png"))); // NOI18N
        btnSave3.setText("Save");
        btnSave3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave3ActionPerformed(evt);
            }
        });

        btnNew3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asm1/resources/icons/plus.png"))); // NOI18N
        btnNew3.setText("New");
        btnNew3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNew3ActionPerformed(evt);
            }
        });

        btnDel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asm1/resources/icons/remove.png"))); // NOI18N
        btnDel3.setText("Delete");
        btnDel3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDel3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMalop, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLophoc, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNew3, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave3, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnUpdate3)
                    .addComponent(btnDel3, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(txtMalop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(txtLophoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNew3)
                    .addComponent(btnUpdate3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave3)
                    .addComponent(btnDel3))
                .addContainerGap())
        );

        jLabel22.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(0, 102, 102));
        jLabel22.setText("QUẢN LÝ MÔN HỌC, LỚP HỌC");

        tblLophoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Mã lớp", "Lớp"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblLophoc.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        tblLophoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblLophocMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tblLophoc);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addContainerGap(18, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel22)
                .addGap(133, 133, 133))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel22)
                .addGap(18, 18, 18)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36))
        );

        jTabbedPane1.addTab("Môn / Lớp", jPanel3);

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 0));
        jLabel1.setText("QUẢN LÝ GIẢNG VIÊN");

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP));

        txtSearch.setPreferredSize(new java.awt.Dimension(63, 24));

        jLabel9.setText("By:");

        cmbSort.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã GV", "Họ và tên", "Ngày sinh", "Email", "Môn dạy" }));

        chkDes.setText("Descending");

        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asm1/resources/icons/search.png"))); // NOI18N
        btnSearch.setText("Search");

        btnSort.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asm1/resources/icons/sorting.png"))); // NOI18N
        btnSort.setText("Sort");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbSort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkDes, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSort, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSort))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(cmbSort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkDes))
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblAvatarGV.setText("<avatar>");
        lblAvatarGV.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblAvatarGV.setMaximumSize(new java.awt.Dimension(60, 20));
        lblAvatarGV.setMinimumSize(new java.awt.Dimension(60, 20));
        lblAvatarGV.setPreferredSize(new java.awt.Dimension(60, 20));
        lblAvatarGV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAvatarGVMouseClicked(evt);
            }
        });

        txtMaGV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaGVActionPerformed(evt);
            }
        });

        txtTenGV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenGVActionPerformed(evt);
            }
        });

        txtDOBGV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDOBGVActionPerformed(evt);
            }
        });

        txtEmailGV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailGVActionPerformed(evt);
            }
        });

        txtMonGV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMonGVActionPerformed(evt);
            }
        });

        jLabel3.setText("Mã GV:");

        jLabel4.setText("Họ và tên:");

        txtMoTaGV.setColumns(20);
        txtMoTaGV.setRows(5);
        jScrollPane1.setViewportView(txtMoTaGV);

        jLabel5.setText("Ngày sinh:");

        jLabel6.setText("Email:");

        jLabel7.setText("Môn dạy:");

        jLabel8.setText("Mô tả:");

        jLabel15.setText("Giới tính:");

        txtGenderGV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGenderGVActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(txtDOBGV, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtGenderGV, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtMaGV, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtTenGV)
                                .addComponent(txtEmailGV, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtMonGV, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtMaGV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtTenGV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15)
                        .addComponent(txtGenderGV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(txtDOBGV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtEmailGV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtMonGV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8))
        );

        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asm1/resources/icons/plus.png"))); // NOI18N
        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asm1/resources/icons/loop-arrow.png"))); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asm1/resources/icons/save.png"))); // NOI18N
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asm1/resources/icons/remove.png"))); // NOI18N
        btnDel.setText("Delete");
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });

        tblGV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã GV", "Họ và tên", "Ngày sinh", "Email", "Môn dạy"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblGV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblGVMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblGV);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(lblAvatarGV, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnUpdate))
                        .addContainerGap(6, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(179, 179, 179))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(btnNew)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(btnSave)
                        .addGap(18, 18, 18)
                        .addComponent(btnDel))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(lblAvatarGV, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Quản lý GV", jPanel1);

        btnDel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asm1/resources/icons/remove.png"))); // NOI18N
        btnDel1.setText("Delete");
        btnDel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDel1ActionPerformed(evt);
            }
        });

        tblSV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã SV", "Họ và tên", "Ngày sinh", "Email", "Lớp học"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSVMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblSV);

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 0));
        jLabel2.setText("QUẢN LÝ SINH VIÊN");

        lblAvatarSV.setText("<avatar>");
        lblAvatarSV.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblAvatarSV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAvatarSVMouseClicked(evt);
            }
        });

        txtMaSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaSVActionPerformed(evt);
            }
        });

        txtTenSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenSVActionPerformed(evt);
            }
        });

        txtDOBSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDOBSVActionPerformed(evt);
            }
        });

        txtEmailSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailSVActionPerformed(evt);
            }
        });

        txtLopSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLopSVActionPerformed(evt);
            }
        });

        jLabel10.setText("Mã SV:");

        jLabel11.setText("Họ và tên:");

        jLabel12.setText("Ngày sinh:");

        jLabel13.setText("Email:");

        jLabel14.setText("Lớp học:");

        jLabel17.setText("Giới tính:");

        txtGenderSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGenderSVActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(txtDOBSV, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtGenderSV, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtTenSV)
                    .addComponent(txtEmailSV, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLopSV, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtTenSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel17)
                        .addComponent(txtGenderSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(txtDOBSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtEmailSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtLopSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        btnNew1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asm1/resources/icons/plus.png"))); // NOI18N
        btnNew1.setText("New");
        btnNew1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNew1ActionPerformed(evt);
            }
        });

        btnUpdate1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asm1/resources/icons/loop-arrow.png"))); // NOI18N
        btnUpdate1.setText("Update");
        btnUpdate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdate1ActionPerformed(evt);
            }
        });

        btnSave1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asm1/resources/icons/save.png"))); // NOI18N
        btnSave1.setText("Save");
        btnSave1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave1ActionPerformed(evt);
            }
        });

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP));

        txtSearch1.setPreferredSize(new java.awt.Dimension(63, 24));

        jLabel16.setText("By:");

        cmbSort1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã SV", "Họ và tên", "Ngày sinh", "Email", "Lớp", "Điểm" }));

        chkDes1.setText("Descending");

        btnSearch1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asm1/resources/icons/search.png"))); // NOI18N
        btnSearch1.setText("Search");

        btnSort1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asm1/resources/icons/sorting.png"))); // NOI18N
        btnSort1.setText("Sort");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbSort1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkDes1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addComponent(txtSearch1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSort1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSearch1, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnSearch1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSort1))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel16)
                                    .addComponent(cmbSort1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkDes1))
                            .addComponent(txtSearch1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(197, 197, 197))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(lblAvatarSV, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnNew1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSave1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnUpdate1))
                        .addGap(14, 14, 14)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(lblAvatarSV, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(btnNew1)
                            .addGap(18, 18, 18)
                            .addComponent(btnUpdate1)
                            .addGap(18, 18, 18)
                            .addComponent(btnSave1)
                            .addGap(18, 18, 18)
                            .addComponent(btnDel1))))
                .addGap(39, 39, 39)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        jTabbedPane1.addTab("Quản lý SV", jPanel2);

        jLabel23.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(102, 102, 0));
        jLabel23.setText("QUẢN LÝ PHÒNG HỌC");

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP));

        txtSearch3.setPreferredSize(new java.awt.Dimension(63, 24));

        jLabel25.setText("By:");

        cmbSort3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã GV", "Họ và tên", "Ngày sinh", "Email", "Môn dạy" }));

        chkDes3.setText("Descending");

        btnSearch3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asm1/resources/icons/search.png"))); // NOI18N
        btnSearch3.setText("Search");

        btnSort3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asm1/resources/icons/sorting.png"))); // NOI18N
        btnSort3.setText("Sort");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbSort3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkDes3, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addComponent(txtSearch3, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSort3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSearch3, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnSearch3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSort3))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel25)
                                    .addComponent(cmbSort3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkDes3))
                            .addComponent(txtSearch3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtMaPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaPhongActionPerformed(evt);
            }
        });

        txtTenLopPH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenLopPHActionPerformed(evt);
            }
        });

        txtTenGVPH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenGVPHActionPerformed(evt);
            }
        });

        txtLichHoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLichHocActionPerformed(evt);
            }
        });

        txtStartDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStartDateActionPerformed(evt);
            }
        });

        jLabel26.setText("Mã Phòng:");

        jLabel27.setText("Tên lớp:");

        jLabel28.setText("Tên GV:");

        jLabel29.setText("Lịch học:");

        jLabel30.setText("Ngày bắt đầu:");

        jLabel33.setText("Ngày kết thúc:");

        txtEndDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEndDateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTenGVPH, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtMaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtTenLopPH)
                                .addComponent(txtLichHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel13Layout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addComponent(txtStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(txtMaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(txtTenLopPH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(txtTenGVPH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(txtLichHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(txtStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(txtEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        btnNew4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asm1/resources/icons/plus.png"))); // NOI18N
        btnNew4.setText("New");
        btnNew4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNew4ActionPerformed(evt);
            }
        });

        btnUpdate4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asm1/resources/icons/loop-arrow.png"))); // NOI18N
        btnUpdate4.setText("Update");
        btnUpdate4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdate4ActionPerformed(evt);
            }
        });

        btnSave4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asm1/resources/icons/save.png"))); // NOI18N
        btnSave4.setText("Save");
        btnSave4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave4ActionPerformed(evt);
            }
        });

        btnDel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asm1/resources/icons/remove.png"))); // NOI18N
        btnDel4.setText("Delete");
        btnDel4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDel4ActionPerformed(evt);
            }
        });

        tblPH.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã Phòng", "Tên lớp", "Tên GV", "Lịch học", "Ngày bắt đầu", "Ngày kết thúc"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPHMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(tblPH);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jScrollPane7)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addGap(0, 23, Short.MAX_VALUE)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addGap(179, 179, 179))))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnNew4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSave4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnUpdate4))
                .addGap(75, 75, 75))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(btnNew4)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate4)
                        .addGap(18, 18, 18)
                        .addComponent(btnSave4)
                        .addGap(18, 18, 18)
                        .addComponent(btnDel4))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Quản lý Phòng học", jPanel11);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblAvatarGVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAvatarGVMouseClicked
        uploadImage("giangVien");
    }//GEN-LAST:event_lblAvatarGVMouseClicked

    private void txtMaGVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaGVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaGVActionPerformed

    private void txtTenGVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenGVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenGVActionPerformed

    private void txtDOBGVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDOBGVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDOBGVActionPerformed

    private void txtEmailGVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailGVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailGVActionPerformed

    private void txtMonGVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMonGVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMonGVActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        addNew("giangVien");
        fillToTable("giangVien");
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        delete("giangVien");
        fillToTable("giangVien");
        clearGV();
    }//GEN-LAST:event_btnDelActionPerformed

    private void btnDel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDel1ActionPerformed
        delete("sinhVien");
        fillToTable("sinhVien");
        clearSV();
    }//GEN-LAST:event_btnDel1ActionPerformed

    private void txtMaSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaSVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaSVActionPerformed

    private void txtTenSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenSVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenSVActionPerformed

    private void txtDOBSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDOBSVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDOBSVActionPerformed

    private void txtEmailSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailSVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailSVActionPerformed

    private void txtLopSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLopSVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLopSVActionPerformed

    private void btnSave1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave1ActionPerformed
        addNew("sinhVien");
        fillToTable("sinhVien");
    }//GEN-LAST:event_btnSave1ActionPerformed

    private void txtMamonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMamonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMamonActionPerformed

    private void txtMonhocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMonhocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMonhocActionPerformed

    private void txtMalopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMalopActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMalopActionPerformed

    private void txtLophocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLophocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLophocActionPerformed

    private void btnSave2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave2ActionPerformed
        addNew("mon");
        fillToTable("mon");
    }//GEN-LAST:event_btnSave2ActionPerformed

    private void btnDel2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDel2ActionPerformed
        delete("mon");
        txtMamon.setText("");
        txtMonhoc.setText("");
        fillToTable("mon");
    }//GEN-LAST:event_btnDel2ActionPerformed

    private void btnNew2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNew2ActionPerformed
        txtMamon.setText("");
        txtMonhoc.setText("");
    }//GEN-LAST:event_btnNew2ActionPerformed

    private void btnNew3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNew3ActionPerformed
        txtMalop.setText("");
        txtLophoc.setText("");
    }//GEN-LAST:event_btnNew3ActionPerformed

    private void btnSave3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave3ActionPerformed
        addNew("lop");
        fillToTable("lop");
    }//GEN-LAST:event_btnSave3ActionPerformed

    private void btnDel3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDel3ActionPerformed
        delete("lop");
        txtMalop.setText("");
        txtLophoc.setText("");
        fillToTable("lop");
    }//GEN-LAST:event_btnDel3ActionPerformed

    private void tblMonhocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMonhocMouseClicked
        fillForm("mon");
    }//GEN-LAST:event_tblMonhocMouseClicked

    private void btnUpdate2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdate2ActionPerformed
        update("mon");
        fillToTable("mon");
    }//GEN-LAST:event_btnUpdate2ActionPerformed

    private void btnUpdate3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdate3ActionPerformed
        update("lop");
        fillToTable("lop");
    }//GEN-LAST:event_btnUpdate3ActionPerformed

    private void tblLophocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblLophocMouseClicked
        fillForm("lop");
    }//GEN-LAST:event_tblLophocMouseClicked

    private void txtGenderGVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGenderGVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGenderGVActionPerformed

    private void txtGenderSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGenderSVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGenderSVActionPerformed

    private void lblAvatarSVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAvatarSVMouseClicked
        uploadImage("sinhVien");
    }//GEN-LAST:event_lblAvatarSVMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        update("giangVien");
        fillToTable("giangVien");
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tblGVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblGVMouseClicked
        fillForm("giangVien");

    }//GEN-LAST:event_tblGVMouseClicked

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        clearGV();
        avatar = "";
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnNew1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNew1ActionPerformed
        clearSV();
        avatar = "";
    }//GEN-LAST:event_btnNew1ActionPerformed

    private void btnUpdate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdate1ActionPerformed
        update("sinhVien");
        fillToTable("sinhVien");
    }//GEN-LAST:event_btnUpdate1ActionPerformed

    private void tblSVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSVMouseClicked
        fillForm("sinhVien");
    }//GEN-LAST:event_tblSVMouseClicked

    private void txtMaPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaPhongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaPhongActionPerformed

    private void txtTenLopPHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenLopPHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenLopPHActionPerformed

    private void txtTenGVPHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenGVPHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenGVPHActionPerformed

    private void txtLichHocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLichHocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLichHocActionPerformed

    private void txtStartDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStartDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStartDateActionPerformed

    private void btnNew4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNew4ActionPerformed
        clearPH();
    }//GEN-LAST:event_btnNew4ActionPerformed

    private void btnUpdate4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdate4ActionPerformed
        update("phongHoc");
        fillToTable("phongHoc");
    }//GEN-LAST:event_btnUpdate4ActionPerformed

    private void btnSave4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave4ActionPerformed
        addNew("phongHoc");
        fillToTable("phongHoc");
    }//GEN-LAST:event_btnSave4ActionPerformed

    private void btnDel4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDel4ActionPerformed
        delete("phongHoc");
        fillToTable("phongHoc");
        clearSV();
    }//GEN-LAST:event_btnDel4ActionPerformed

    private void tblPHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPHMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblPHMouseClicked

    private void txtEndDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEndDateActionPerformed
        fillForm("phongHoc");
    }//GEN-LAST:event_txtEndDateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin_GUI().setVisible(true);
            }
        });
    }

// đủ các loại check
    Boolean check;

    // check data trên input form
    private Boolean checkField(String tableName) {
        thongBao = "";
        check = true;
        switch (tableName) {
            case "mon" -> {
                checkFieldMon();
                System.out.println(maMon + "|" + tenMon);
            }
            case "lop" -> {
                checkFieldLop();
                System.out.println(tableName + "|" + maLop + "|" + tenLop);
            }
            case "giangVien" -> {
                checkFieldGV();
                System.out.println(tableName + "|" + maGV + "|" + tenGV);
            }
            case "sinhVien" -> {
                checkFieldSV();
                System.out.println(tableName + "|" + maSV + "|" + tenSV);
            }
            case "phongHoc" -> {
                checkFieldPH();
                System.out.println(tableName + "|" + maPhong + "|" + lichHoc);
            }
        }
        return check;
    }

    private void checkFieldMon() {
        maMon = txtMamon.getText();
        tenMon = txtMonhoc.getText();
        if (maMon.isBlank() || maMon.isEmpty() || maMon.length() > 5) {
            thongBao += "\nMã môn là chuỗi có độ dài từ 1->5 và không blank";
            check = false;
        }
        if (tenMon.isBlank() || tenMon.isEmpty()) {
            thongBao += "\nMôn học không được để trống hoặc blank";
            check = false;
        }
    }

    private void checkFieldLop() {
        maLop = txtMalop.getText();
        tenLop = txtLophoc.getText();
        if (maLop.isBlank() || maLop.isEmpty() || maLop.length() > 5) {
            thongBao += "\nMã môn là chuỗi có độ dài từ 1->5 và không blank";
            check = false;
        }
        if (tenLop.isBlank() || tenLop.isEmpty()) {
            thongBao += "\nMôn học không được để trống hoặc blank";
            check = false;
        }
    }

    private void checkFieldGV() {
        maGV = txtMaGV.getText();
        tenGV = txtTenGV.getText();
        tenMon = txtMonGV.getText();
        gender = txtGenderGV.getText();
        dob = LocalDate.parse(txtDOBGV.getText());
        mota = txtMoTaGV.getText();
        email = txtEmailGV.getText();
//        avatar = lblAvatarGV.
        if (gender.isBlank() || gender.isEmpty()) {
            thongBao += "\nGiới tính không được để trống hoặc blank";
            check = false;
        }
        if (tenMon.isBlank() || tenMon.isEmpty()) {
            for (Mon temp : dsMon) {
                if (!tenMon.equals(temp.getTenMon())) {
                    thongBao += "\nMôn dạy chưa được đăng kí";
                    check = false;
                    break;
                }
            }
            thongBao += "\nMôn dạy không được để trống hoặc blank";
            check = false;
        }
        if (maGV.isBlank() || maGV.isEmpty() || maGV.length() > 5) {
            thongBao += "\nMã GV là chuỗi có độ dài từ 1->5 và không blank";
            check = false;
        }
        if (tenGV.isBlank() || tenGV.isEmpty()) {
            thongBao += "\nTên GV không được để trống hoặc blank";
            check = false;
        }
    }

    private void checkFieldSV() {
        maSV = txtMaSV.getText();
        tenSV = txtTenSV.getText();
        tenLop = txtLopSV.getText();
        gender = txtGenderSV.getText();
        dob = LocalDate.parse(txtDOBSV.getText());
        email = txtEmailSV.getText();
        if (gender.isBlank() || gender.isEmpty()) {
            thongBao += "\nGiới tính không được để trống hoặc blank";
            check = false;
        }
        if (tenLop.isBlank() || tenLop.isEmpty()) {
            for (Lop temp : dsLop) {
                if (!tenLop.equals(temp.getTenLop())) {
                    thongBao += "\nLớp học chưa được đăng kí";
                    check = false;
                    break;
                }
            }
            thongBao += "\nLớp học không được để trống hoặc blank";
            check = false;
        }
        if (maSV.isBlank() || maSV.isEmpty() || maSV.length() > 5) {
            thongBao += "\nMã SV là chuỗi có độ dài từ 1->5 và không blank";
            check = false;
        }
        if (tenSV.isBlank() || tenSV.isEmpty()) {
            thongBao += "\nTên sinh viên không được để trống hoặc blank";
            check = false;
        }
    }

    private boolean isValidLichHoc(String input) {
        // The regex pattern to match the syntax: "ca <ca> <buoihoc>"
        String regex = "^ca\\s\\d+\\s\\d+$";
        // Compile the regex pattern
        Pattern pattern = Pattern.compile(regex);
        // Create a Matcher object to match the input with the regex pattern
        Matcher matcher = pattern.matcher(input);
        // Return true if the input matches the regex pattern, otherwise false
        return matcher.matches();
    }

    private void checkFieldPH() {
        maPhong = txtMaPhong.getText();
        tenLop = txtTenLopPH.getText();
        tenGV = txtTenGVPH.getText();
        lichHoc = txtLichHoc.getText();
        try {
            start_date = LocalDate.parse(txtStartDate.getText());
            end_date = LocalDate.parse(txtEndDate.getText());
        } catch (Exception ex) {
            thongBao += "\nparse LocalDate failed";
            check = false;
        }
        if (maPhong.isBlank() || maPhong.isEmpty() || maPhong.length() > 5) {
            thongBao += "\nMã Phòng học là chuỗi có độ dài từ 1->5 và không blank";
            check = false;
        }
        if (tenLop.isBlank() || tenLop.isEmpty()) {
            thongBao += "\nTên lớp không được để trống hoặc blank";
            check = false;
        }
        if (tenGV.isBlank() || tenGV.isEmpty()) {
            thongBao += "\nTên GV không được để trống hoặc blank";
            check = false;
        }
        if (!isValidLichHoc(lichHoc)) {
            thongBao += "\nLịch học phải theo syntax 'ca <ca> <buoiHoc>";
            check = false;
        }
    }

    // check trùng khóa chính
    private Boolean checkDup(String tableName, String id) {
        Boolean check = true;

        switch (tableName) {
            case "mon" -> {
                for (Mon temp : dsMon) {
                    if (id.equals(temp.getMaMon())) {
                        thongBao += "\nTrùng khóa chính mã môn";
                        check = false;
                    }
                }
            }
            case "lop" -> {
                for (Lop temp : dsLop) {
                    if (id.equals(temp.getMaLop())) {
                        thongBao += "\nTrùng khóa chính mã lớp";
                        check = false;
                    }
                }
            }
            case "giangVien" -> {
                for (GiangVien temp : dsGV) {
//                    System.out.println(temp.getMaGV() + maGV + tenGV + email + avatar + mota + tenMon);
                    if (id.equals(temp.getMaGV())) {
                        thongBao += "\nTrùng khóa chính mã GV";
                        check = false;
                    }
                }
            }
            case "sinhVien" -> {
                for (SinhVien temp : dsSV) {
                    if (id.equals(temp.getMaSV())) {
                        thongBao += "\nTrùng khóa chính mã SV";
                        check = false;
                    }
                }
            }
            case "phongHoc" -> {
                for (PhongHoc temp : dsPH) {
                    String[] ids = id.split(",");
                    if (ids[0].equals(temp.getMaPhong()) && ids[1].equals(temp.getLichHoc())) {
                        thongBao += "\nTrùng khóa chính (maPhong, lichHoc)";
                        check = false;
                    }
                }
            }
        }
        return check;
    }

    //check liệu có hàng nào trong table đã được chọn chưa
    private boolean checkSelected(String tableName) {
        check = false;
        switch (tableName) {
            case "mon" -> {
                index = tblMonhoc.getSelectedRow();
                if (index != -1) {
                    mon = dsMon.get(index);
                    check = true;
                }
            }
            case "lop" -> {
                index = tblLophoc.getSelectedRow();
                if (index != -1) {
                    lop = dsLop.get(index);
                    check = true;
                }
            }
            case "giangVien" -> {
                index = tblGV.getSelectedRow();
                if (index != -1) {
                    giangVien = dsGV.get(index);
                    check = true;
                }
            }
            case "sinhVien" -> {
                index = tblSV.getSelectedRow();
                if (index != -1) {
                    sinhVien = dsSV.get(index);
                    check = true;
                }
            }
            case "phongHoc" -> {
                index = tblPH.getSelectedRow();
                if (index != -1) {
                    phongHoc = dsPH.get(index);
                    check = true;
                }
            }
        }
        return check;
    }
// Đủ các loại insert vô database

    private void insertInto(String tableName) {
        check = false;
        String user = "sa";
        String pass = "root";
        String url = "jdbc:sqlserver://localhost:1433;databaseName="
                + databaseName + ";encrypt=false";
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection con = DriverManager.getConnection(url, user, pass);

            switch (tableName) {
                case "mon" -> {
                    insertMon(con);
                }
                case "lop" -> {
                    insertLop(con);
                }
                case "giangVien" -> {
                    insertGV(con);
//                    System.out.println("good");
                }
                case "sinhVien" -> {
                    insertSV(con);
                }
                case "phongHoc" -> {
                    insertPH(con);
                }
            }

            con.close();
        } catch (ClassNotFoundException | SQLException ex) {
            System.out.println(ex);
        }
    }

    private void insertMon(Connection con) throws SQLException {
        //? stand for a placeholder
        String query = "insert into mon values (?, ?)";
        PreparedStatement ps = con.prepareStatement(query);

        // set value for placeholder
        ps.setString(1, maMon);
        ps.setString(2, tenMon);
        // execute insert statement
        int rowsAffected = ps.executeUpdate();
        if (rowsAffected > 0) {
            System.out.println("Insertion: " + rowsAffected + " rows affected");
            dsMon.add(new Mon(maMon, tenMon));
        } else {
            System.out.println("insertion failed");
        }
    }

    private void insertLop(Connection con) throws SQLException {
        //? stand for a placeholder
        String query = "insert into lop values (?, ?)";
        PreparedStatement ps = con.prepareStatement(query);

        // set value for placeholder
        ps.setString(1, maLop);
        ps.setString(2, tenLop);
        // execute insert statement
        int rowsAffected = ps.executeUpdate();
        if (rowsAffected > 0) {
            System.out.println("Insertion: " + rowsAffected + " rows affected");
            dsLop.add(new Lop(maLop, tenLop));
        } else {
            System.out.println("insertion failed");
        }
    }

    private void insertPH(Connection con) throws SQLException {
        //? stand for a placeholder
        String query = "insert into phongHoc values (?, ?, ?, ?, ?, ?)";
        PreparedStatement ps = con.prepareStatement(query);

        for (Lop temp : dsLop) {
            if (tenLop.equals(temp.getTenLop())) {
                maLop = temp.getMaLop();
                check = true;
                break;
            }
        }
        for (GiangVien temp : dsGV) {
            if (tenGV.equals(temp.getTenGV())) {
                maGV = temp.getMaGV();
                check = true;
                break;
            }
        }
        if (!check) {
            JOptionPane.showMessageDialog(this, "foreign key fk_ph_gv || fk_ph_lop is conflited");
            return;
        }

        // set value for placeholder
        ps.setString(1, maPhong);
        ps.setString(2, maLop);
        ps.setString(3, maGV);
        ps.setString(4, lichHoc);
        ps.setDate(5, Date.valueOf(start_date));
        ps.setDate(6, Date.valueOf(end_date));
        // execute insert statement
        int rowsAffected = ps.executeUpdate();
        if (rowsAffected > 0) {
            System.out.println("Insertion: " + rowsAffected + " rows affected");
            dsPH.add(new PhongHoc(maPhong, maLop, maGV, lichHoc, start_date, end_date));
        } else {
            System.out.println("insertion failed");
        }
    }

    private void uploadImage(String tableName) {
        JFileChooser fc = new JFileChooser("D:\\programming_folder\\java_folder\\sof203\\src\\asm1\\resources\\images");
        int returnValue = fc.showOpenDialog(this);

        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            avatar = file.getAbsolutePath();

            ImageIcon imageIcon = new ImageIcon(avatar);
            Image image = imageIcon.getImage().getScaledInstance(lblAvatarGV.getWidth(), lblAvatarGV.getHeight(), Image.SCALE_SMOOTH);
            imageIcon = new ImageIcon(image);
            switch (tableName) {
                case "giangVien" -> {
                    lblAvatarGV.setIcon(imageIcon);
                    lblAvatarGV.setText("");
                }
                case "sinhVien" -> {
                    lblAvatarSV.setIcon(imageIcon);
                    lblAvatarSV.setText("");
                }
            }
        }
    }

    private void insertGV(Connection con) throws SQLException {
        //insert query
        String insertQuery = "insert into giangVien values (?, ?, ?, ?, ?, ?, ?, ?)";
        PreparedStatement ps = con.prepareStatement(insertQuery);
        //select query to get maMon
        String selectQuery = "select maMon from mon where tenmon = ?";
        PreparedStatement st = con.prepareStatement(selectQuery);
        st.setString(1, tenMon);
        ResultSet rs = st.executeQuery();

        if (rs.next()) {
            maMon = rs.getString("maMon");
            ps.setString(1, maGV);
            ps.setString(2, tenGV);
            ps.setDate(3, Date.valueOf(dob));
            ps.setString(4, email);
            ps.setString(5, mota);
            ps.setString(6, maMon);
            ps.setString(7, avatar);
            ps.setString(8, gender);
            // execute insert statement
            int rowsAffected = ps.executeUpdate();
            if (rowsAffected > 0) {
                System.out.println("Insertion: " + rowsAffected + " rows affected");
                dsGV.add(new GiangVien(maGV, tenGV, dob, email, mota, maMon, avatar, gender));
            } else {
                System.out.println("insertion failed");
            }
        } else {
            System.out.println("mamon not found");
        }
    }

    private void insertSV(Connection con) throws SQLException {

        //insert query
        String insertQuery = "insert into sinhVien values (?, ?, ?, ?, ?, ?, ?)";
        PreparedStatement ps = con.prepareStatement(insertQuery);
        //select query to get maMon
        String selectQuery = "select maLop from lop where tenLop = ?";
        PreparedStatement st = con.prepareStatement(selectQuery);
        st.setString(1, tenLop);
        ResultSet rs = st.executeQuery();

        if (rs.next()) {
            maLop = rs.getString("maLop");
            // set value for placeholder
            ps.setString(1, maSV);
            ps.setString(2, tenSV);
            ps.setDate(3, Date.valueOf(dob));
            ps.setString(4, email);
            ps.setString(5, maLop);
            ps.setString(6, avatar);
            ps.setString(7, gender);
            // execute insert statement
            int rowsAffected = ps.executeUpdate();
            if (rowsAffected > 0) {
                System.out.println("Insertion: " + rowsAffected + " rows affected");
                dsSV.add(new SinhVien(maSV, tenSV, dob, email, maLop, avatar, gender));
            } else {
                System.out.println("insertion failed");
            }
        } else {
            System.out.println("not found malop");
        }
    }

//insert values into database then add to ArrayList
    private void addNew(String tableName) {
        thongBao = "";
        if (!checkField(tableName)) {
            JOptionPane.showMessageDialog(this, thongBao);
            return;
        }
        switch (tableName) {
            case "mon" -> {
                if (checkDup(tableName, maMon)) {
                    insertInto(tableName);
                } else {
                    JOptionPane.showMessageDialog(this, thongBao);
                }
            }
            case "lop" -> {
                if (checkDup(tableName, maLop)) {
                    insertInto(tableName);
                } else {
                    JOptionPane.showMessageDialog(this, thongBao);
                }
            }
            case "giangVien" -> {
//                System.out.println("nah");
                if (checkDup(tableName, maGV)) {
//                    System.out.println("no");
                    insertInto(tableName);
                } else {
                    JOptionPane.showMessageDialog(this, thongBao);
                }
            }
            case "sinhVien" -> {
                if (checkDup(tableName, maSV)) {
                    insertInto(tableName);
                } else {
                    JOptionPane.showMessageDialog(this, thongBao);
                }
            }
            case "phongHoc" -> {
                if (checkDup(tableName, maPhong + "," + lichHoc)) {
                    insertInto(tableName);
                } else {
                    JOptionPane.showMessageDialog(this, thongBao);
                }
            }
        }
    }

// đủ các loại xóa dữ liệu từ database
    private void delete(String tableName) {
        if (!checkSelected(tableName)) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn 1 hàng");
            return;
        }
        String user = "sa";
        String pass = "root";
        String url = "jdbc:sqlserver://localhost:1433;databaseName="
                + databaseName + ";encrypt=false";
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection con = DriverManager.getConnection(url, user, pass);

            switch (tableName) {
                case "mon" -> {
                    deleteMon(con);
                }
                case "lop" -> {
                    deleteLop(con);
                }
                case "giangVien" -> {
                    deleteGV(con);
                }
                case "sinhVien" -> {
                    deleteSV(con);
                }
                case "phongHoc" -> {
                    deletePH(con);
                }
            }
            con.close();
        } catch (ClassNotFoundException | SQLException ex) {
            ex.printStackTrace();
            System.out.println(ex);
        }
    }

    private void deleteMon(Connection con) throws SQLException {
        String query = "delete from mon where maMon = ?";
        PreparedStatement ps = con.prepareStatement(query);

        // set value for placeholder
        ps.setString(1, mon.getMaMon());
        // execute insert statement
        int rowsAffected = ps.executeUpdate();
        if (rowsAffected > 0) {
            System.out.println("Deletion: " + rowsAffected + " rows affected");
            dsMon.remove(index);//changable
        } else {
            System.out.println("deletion failed");
        }
    }

    private void deleteLop(Connection con) throws SQLException {
        String query = "delete from lop where maLop = ?";
        PreparedStatement ps = con.prepareStatement(query);

        // set value for placeholder
        ps.setString(1, lop.getMaLop());
        // execute insert statement
        int rowsAffected = ps.executeUpdate();
        if (rowsAffected > 0) {
            System.out.println("Deletion: " + rowsAffected + " rows affected");
            dsLop.remove(index);
        } else {
            System.out.println("deletion failed");
        }
    }

    private void deleteGV(Connection con) throws SQLException {
        String query = "delete from giangvien where maGV = ?";
        PreparedStatement ps = con.prepareStatement(query);

        // set value for placeholder
        ps.setString(1, giangVien.getMaGV());
        // execute insert statement
        int rowsAffected = ps.executeUpdate();
        if (rowsAffected > 0) {
            System.out.println("Deletion: " + rowsAffected + " rows affected");
            dsGV.remove(index);
        } else {
            System.out.println("deletion failed");
        }
    }

    private void deletePH(Connection con) throws SQLException {
        String query = "delete from phongHoc where maPH = ? and lichHoc = ?";
        PreparedStatement ps = con.prepareStatement(query);

        // set value for placeholder
        ps.setString(1, phongHoc.getMaPhong());
        ps.setString(2, phongHoc.getLichHoc());
        // execute insert statement
        int rowsAffected = ps.executeUpdate();
        if (rowsAffected > 0) {
            System.out.println("Deletion: " + rowsAffected + " rows affected");
            dsGV.remove(index);
        } else {
            System.out.println("deletion failed");
        }
    }

    private void deleteSV(Connection con) throws SQLException {
        String query = "delete from sinhVien where maSV = ?";
        PreparedStatement ps = con.prepareStatement(query);

        // set value for placeholder
        ps.setString(1, sinhVien.getMaSV());
        // execute insert statement
        int rowsAffected = ps.executeUpdate();
        if (rowsAffected > 0) {
            System.out.println("Deletion: " + rowsAffected + " rows affected");
            dsSV.remove(index);
        } else {
            System.out.println("deletion failed");
        }
    }
// đủ các loại update dữ liệu mới lên database

    private void update(String tableName) {
        thongBao = "";
        if (!checkSelected(tableName)) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn 1 hàng");
            return;
        }
        if (!checkField(tableName)) {
            JOptionPane.showMessageDialog(this, thongBao);
            return;
        }
        String user = "sa";
        String pass = "root";
        String url = "jdbc:sqlserver://localhost:1433;databaseName="
                + databaseName + ";encrypt=false";
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection con = DriverManager.getConnection(url, user, pass);

            switch (tableName) {
                case "mon" -> {
                    updateMon(con);
                }
                case "lop" -> {
                    updateLop(con);
                }
                case "giangVien" -> {
                    updateGV(con);
                }
                case "sinhVien" -> {
                    updateSV(con);
                }
                case "phongHoc" -> {
                    updatePH(con);
                }
            }
            con.close();
        } catch (ClassNotFoundException | SQLException ex) {
            ex.printStackTrace();
            System.out.println(ex);
        }
    }

    private void updateMon(Connection con) throws SQLException {
        String query = "update mon set maMon = ?, tenMon = ? where maMon = ?";
        PreparedStatement ps = con.prepareStatement(query);
        ps.setString(1, maMon);
        ps.setString(2, tenMon);
        ps.setString(3, mon.getMaMon());
        // execute insert statement
        int rowsAffected = ps.executeUpdate();
        if (rowsAffected > 0) {
            System.out.println("Update: " + rowsAffected + " affected");
            dsMon.set(index, new Mon(maMon, tenMon));
        } else {
            System.out.println("deletion failed");
        }
    }

    private void updateLop(Connection con) throws SQLException {
        String query = "update lop set maLop = ?, tenLop = ? where maLop = ?";
        PreparedStatement ps = con.prepareStatement(query);
        //**
        ps.setString(1, maLop);
        ps.setString(2, tenLop);
        ps.setString(3, lop.getMaLop());
        // execute insert statement
        int rowsAffected = ps.executeUpdate();
        if (rowsAffected > 0) {
            System.out.println("Update: " + rowsAffected + " affected");
            dsLop.set(index, new Lop(maLop, tenLop));//**
        } else {
            System.out.println("deletion failed");
        }
    }

    private void updateGV(Connection con) throws SQLException {
        String updateQuery = "update giangVien set maGV = ?, tenGV = ?, dob = ?, email = ?, mota = ?, mamon = ?, avatar = ?, gender = ? where maGV = ?";
        PreparedStatement ps = con.prepareStatement(updateQuery);

        String selectQuery = "select maMon from mon where tenmon = ?";
        PreparedStatement st = con.prepareStatement(selectQuery);
        st.setString(1, tenMon);
        ResultSet rs = st.executeQuery();

        if (rs.next()) {
            maMon = rs.getString("maMon");
            ps.setString(1, maGV);
            ps.setString(2, tenGV);
            ps.setDate(3, Date.valueOf(dob));
            ps.setString(4, email);
            ps.setString(5, mota);
            ps.setString(6, maMon);
            ps.setString(7, avatar);
            ps.setString(8, gender);
            ps.setString(9, giangVien.getMaGV());
            // execute insert statement
            int rowsAffected = ps.executeUpdate();
            if (rowsAffected > 0) {
                System.out.println("Update: " + rowsAffected + " rows affected");
                dsGV.set(index, new GiangVien(maGV, tenGV, dob, email, mota, maMon, avatar, gender));
            } else {
                System.out.println("Update failed");
            }
        } else {
            System.out.println("mamon not found");
        }
    }

    private void updateSV(Connection con) throws SQLException {
        String updateQuery = "update sinhVien set maSV = ?, tenSV = ?, dob = ?, email = ?, maLop = ?, avatar = ?, gender = ? where maSV = ?";
        PreparedStatement ps = con.prepareStatement(updateQuery);

        for (Lop lopTemp : dsLop) {
            if (tenLop.equals(lopTemp.getTenLop())) {
                maLop = lopTemp.getMaLop();
                break;
            }
        }
        ps.setString(1, maSV);
        ps.setString(2, tenSV);
        ps.setDate(3, Date.valueOf(dob));
        ps.setString(4, email);
        ps.setString(5, maLop);
        ps.setString(6, avatar);
        ps.setString(7, gender);
        ps.setString(8, sinhVien.getMaSV());
        // execute insert statement
        int rowsAffected = ps.executeUpdate();
        if (rowsAffected > 0) {
            System.out.println("Update: " + rowsAffected + " rows affected");
            dsSV.set(index, new SinhVien(maSV, tenSV, dob, email, maLop, avatar, gender));
        } else {
            System.out.println("Update failed");
        }
    }

    private void updatePH(Connection con) throws SQLException {
        String updateQuery = "update phonghoc set maphong = ?, maGV = ?, lichHoc = ?, sDate = ?, eDate = ? , maLop = ? "
                + "where maphong = ?, lichhoc = ?";
        PreparedStatement ps = con.prepareStatement(updateQuery);

        for (Lop temp : dsLop) {
            if (tenLop.equals(temp.getTenLop())) {
                maLop = temp.getMaLop();
                check = true;
                break;
            }
        }
        for (GiangVien temp : dsGV) {
            if (tenGV.equals(temp.getTenGV())) {
                maGV = temp.getMaGV();
                check = true;
                break;
            }
        }
        ps.setString(1, maPhong);
        ps.setString(2, maGV);
        ps.setString(3, lichHoc);
        ps.setDate(4, Date.valueOf(start_date));
        ps.setDate(5, Date.valueOf(end_date));
        ps.setString(6, maLop);
        ps.setString(7, phongHoc.getMaPhong());
        ps.setString(8, phongHoc.getLichHoc());
        // execute insert statement
        int rowsAffected = ps.executeUpdate();
        if (rowsAffected > 0) {
            System.out.println("Update: " + rowsAffected + " rows affected");
            dsPH.set(index, new PhongHoc(maPhong, maLop, maGV, lichHoc, start_date, end_date));
        } else {
            System.out.println("Update failed");
        }
    }
// lấy dữ liệu từ arraylist đổ lên form

    private void show1stEle() {
        if (!dsMon.isEmpty()) {
            mon = dsMon.get(0);
            txtMamon.setText(mon.getMaMon());
            txtMonhoc.setText(mon.getTenMon());
        }
        if (!dsLop.isEmpty()) {
            lop = dsLop.get(0);
            txtMalop.setText(lop.getMaLop());
            txtLophoc.setText(lop.getTenLop());
        }
        if (!dsGV.isEmpty()) {
            giangVien = dsGV.get(0);
            fillFormGV();
        }
        if (!dsSV.isEmpty()) {
            sinhVien = dsSV.get(0);
            fillFormSV();
        }
        if (!dsPH.isEmpty()) {
//            phongHoc = dsPH.get(0);
//            fillFormPH();
        }
    }

    private void fillForm(String tableName) {
        if (!checkSelected(tableName)) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn 1 hàng");
            return;
        }
        switch (tableName) {
            case "mon" -> {
                txtMamon.setText(mon.getMaMon());
                txtMonhoc.setText(mon.getTenMon());
            }
            case "lop" -> {
                txtMalop.setText(lop.getMaLop());
                txtLophoc.setText(lop.getTenLop());
            }
            case "giangVien" -> {
                fillFormGV();
            }
            case "sinhVien" -> {
                fillFormSV();
            }
            case "phongHoc" -> {
                fillFormPH();
            }
        }
    }

    private void fillFormGV() {
        txtMaGV.setText(giangVien.getMaGV());
        txtTenGV.setText(giangVien.getTenGV());
        txtDOBGV.setText(giangVien.getDob().toString());
        txtMoTaGV.setText(giangVien.getMoTa());
        txtGenderGV.setText(giangVien.getGender());
        txtEmailGV.setText(giangVien.getEmail());
        for (Mon temp : dsMon) {
            if (giangVien.getMaMon().equals(temp.getMaMon())) {
                tenMon = temp.getTenMon();
                break;
            }
        }
        txtMonGV.setText(tenMon);
        if (!giangVien.getAvatar().isEmpty()) {
            ImageIcon imageIcon = new ImageIcon(giangVien.getAvatar());
            Image image = imageIcon.getImage().getScaledInstance(lblAvatarGV.getWidth(), lblAvatarGV.getHeight(), Image.SCALE_SMOOTH);
            imageIcon = new ImageIcon(image);
            lblAvatarGV.setIcon(imageIcon);
            lblAvatarGV.setText("");
        } else {
            lblAvatarGV.setText("<avatar>");
        }
    }

    private void fillFormSV() {
        txtMaSV.setText(sinhVien.getMaSV());
        txtTenSV.setText(sinhVien.getTenSV());
        txtDOBSV.setText(sinhVien.getDob().toString());
        txtGenderSV.setText(sinhVien.getGender());
        txtEmailSV.setText(sinhVien.getEmail());
        for (Lop temp : dsLop) {
            if (sinhVien.getMaLop().equals(temp.getMaLop())) {
                tenLop = temp.getTenLop();
                break;
            }
        }
        txtLopSV.setText(tenLop);
        if (!sinhVien.getAvatar().isEmpty()) {
            ImageIcon imageIcon = new ImageIcon(sinhVien.getAvatar());
            Image image = imageIcon.getImage().getScaledInstance(lblAvatarSV.getWidth(), lblAvatarSV.getHeight(), Image.SCALE_SMOOTH);
            imageIcon = new ImageIcon(image);
            lblAvatarSV.setIcon(imageIcon);
            lblAvatarSV.setText("");
        } else {
            lblAvatarSV.setText("<avatar>");
        }
    }

    private void fillFormPH() {
        txtMaPhong.setText(phongHoc.getMaPhong());
        txtLichHoc.setText(phongHoc.getLichHoc());
        txtStartDate.setText(phongHoc.getStart_date().toString());
        txtEndDate.setText(phongHoc.getEnd_date().toString());

        for (Lop temp : dsLop) {
            if (phongHoc.getMaLop().equals(temp.getMaLop())) {
                tenLop = temp.getTenLop();
                check = true;
                break;
            }
        }
        for (GiangVien temp : dsGV) {
            if (phongHoc.getMaGV().equals(temp.getMaGV())) {
                tenGV = temp.getTenGV();
                check = true;
                break;
            }
        }
        if (!check) {
            JOptionPane.showMessageDialog(this, "foreign key fk_ph_gv || fk_ph_lop is conflited");
            return;
        }

        txtTenLopPH.setText(tenLop);
        txtTenGVPH.setText(tenGV);
    }

    private void clearGV() {
        txtMaGV.setText("");
        txtTenGV.setText("");
        txtDOBGV.setText("");
        txtMoTaGV.setText("");
        txtGenderGV.setText("");
        txtEmailGV.setText("");
        txtMonGV.setText("");
        lblAvatarGV.setIcon(null);
        lblAvatarGV.setText("<avatar>");
    }

    private void clearSV() {
        txtMaSV.setText("");
        txtTenSV.setText("");
        txtDOBSV.setText("");
        txtGenderSV.setText("");
        txtEmailSV.setText("");
        txtLopSV.setText("");
        lblAvatarSV.setIcon(null);
        lblAvatarSV.setText("<avatar>");
    }

    private void clearPH() {
        txtMaPhong.setText("");
        txtLichHoc.setText("");
        txtStartDate.setText("");
        txtEndDate.setText("");
        txtTenLopPH.setText("");
        txtTenGVPH.setText("");
    }
// lấy dữ liệu có sẵn từ database đổ lên model của các loại JTable

    private void uploadDatabase(String tableName) {
        String query = "select * from " + tableName;
        String user = "sa";
        String pass = "root";
        String url = "jdbc:sqlserver://localhost:1433;databaseName="
                + databaseName + ";encrypt=false";
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(query);

            switch (tableName) {
                case "mon" ->
                    uploadMon(rs);
                case "lop" ->
                    uploadLop(rs);
                case "giangVien" ->
                    uploadGV(con);
                case "sinhVien" ->
                    uploadSV(con);
                case "phongHoc" ->
                    uploadPH(con);
            }

            con.close();
        } catch (ClassNotFoundException | SQLException ex) {
            ex.printStackTrace();
            System.out.println(ex);
        }
    }

    private void uploadMon(ResultSet rs) throws SQLException {
        Mon temp;
        while (rs.next()) {
            maMon = rs.getString("maMon");
            tenMon = rs.getString("tenMon");
            temp = new Mon(maMon, tenMon);
            dsMon.add(temp);
        }
    }

    private void uploadLop(ResultSet rs) throws SQLException {
        Lop temp;
        while (rs.next()) {
            maLop = rs.getString("maLop");
            tenLop = rs.getString("tenLop");
            temp = new Lop(maLop, tenLop);
            dsLop.add(temp);
        }
    }

//    private int convertGender(String gender) {
//        if (gender.equalsIgnoreCase("Nam")) return 1;
//        else if (gender.equalsIgnoreCase("Nữ")) return 0;
//        else {
//            thongBao += "gender syntax error";
//        }
//    }
    private void uploadGV(Connection con) throws SQLException {
        String query = """
                       select gv.*, tenMon from giangVien gv
                       join mon on mon.maMon = gv.maMon""";
        Statement st = con.createStatement();
        ResultSet rs = st.executeQuery(query);
        GiangVien temp;
        while (rs.next()) {
            maGV = rs.getString("maGV");
            tenGV = rs.getString("tenGV");
            email = rs.getString("email");
            mota = rs.getString("mota");
            maMon = rs.getString("maMon");
            avatar = rs.getString("avatar");
            Date dob_data = rs.getDate("dob");
            gender = rs.getString("gender");
            dob = dob_data.toLocalDate();
            gender = rs.getString("gender");
            temp = new GiangVien(maGV, tenGV, dob, email, mota, maMon, avatar, gender);
            dsGV.add(temp);
        }
    }

    private void uploadSV(Connection con) throws SQLException {
        String query = "select * from sinhVien";
        Statement st = con.createStatement();
        ResultSet rs = st.executeQuery(query);
        SinhVien temp;
        while (rs.next()) {
            maSV = rs.getString("maSV");
            tenSV = rs.getString("tenSV");
            email = rs.getString("email");
            maLop = rs.getString("malop");
            avatar = rs.getString("avatar");
            Date dob_data = rs.getDate("dob");
            gender = rs.getString("gender");
            dob = dob_data.toLocalDate();
            gender = rs.getString("gender");
            temp = new SinhVien(maSV, tenSV, dob, email, maLop, avatar, gender);
            dsSV.add(temp);
        }
    }
    private void uploadPH(Connection con) throws SQLException {
        String query = """
                       select ph.*, tenLop, tenGV from phongHoc ph
                       join lop on lop.maLop = ph.maLop
                       join giangvien gv on gv.magv = ph.magv""";
        Statement st = con.createStatement();
        ResultSet rs = st.executeQuery(query);
        PhongHoc temp;
        while (rs.next()) {    
            maPhong = rs.getString("maPhong");
            maLop = rs.getString("maPhong");
            maGV = rs.getString("maPhong");
            lichHoc = rs.getString("maPhong");
            start_date = rs.getDate("sdate").toLocalDate();
            end_date = rs.getDate("edate").toLocalDate();
            
            temp = new PhongHoc(maPhong, maLop, maGV, lichHoc, start_date, end_date);
            dsPH.add(temp);
        }
    }

    private void fillToTable(String tableName) {
        DefaultTableModel model;
        switch (tableName) {
            case "mon" -> {
                model = (DefaultTableModel) tblMonhoc.getModel();
                model.setRowCount(0);
                for (Mon temp : dsMon) {
                    Object[] row = new Object[]{temp.getMaMon(), temp.getTenMon()};
                    model.addRow(row);
                }
            }
            case "lop" -> {
                model = (DefaultTableModel) tblLophoc.getModel();
                model.setRowCount(0);
                for (Lop temp : dsLop) {
                    Object[] row = new Object[]{temp.getMaLop(), temp.getTenLop()};
                    model.addRow(row);
                }
            }
            case "giangVien" -> {
                model = (DefaultTableModel) tblGV.getModel();
                model.setRowCount(0);
                for (GiangVien temp : dsGV) {
                    for (Mon mon : dsMon) {
                        if (temp.getMaMon().equals(mon.getMaMon())) {
                            tenMon = mon.getTenMon();
                        }
                    }
                    Object[] row = new Object[]{temp.getMaGV(), temp.getTenGV(), temp.getDob(), temp.getEmail(), tenMon};
                    model.addRow(row);
                }
            }
            case "sinhVien" -> {
                model = (DefaultTableModel) tblSV.getModel();
                model.setRowCount(0);
                for (SinhVien temp : dsSV) {
                    for (Lop lop : dsLop) {
                        if (temp.getMaLop().equals(lop.getMaLop())) {
                            tenLop = lop.getTenLop();
                        }
                    }
                    Object[] row = new Object[]{temp.getMaSV(), temp.getTenSV(), temp.getDob(), temp.getEmail(), tenLop};
                    model.addRow(row);
                }
            }
            case "phongHoc" -> {
                model = (DefaultTableModel) tblPH.getModel();
                model.setRowCount(0);
                for (PhongHoc temp : dsPH) {
                    for (Lop lop : dsLop) {
                        if (temp.getMaLop().equals(lop.getMaLop())) {
                            tenLop = lop.getTenLop();
                        }
                    }
                    for (GiangVien gv : dsGV) {
                        if (temp.getMaGV().equals(gv.getMaGV())) {
                            tenGV = gv.getTenGV();
                        }
                    }
                    Object[] row = new Object[]{temp.getMaPhong(), tenLop, tenGV, temp.getLichHoc(), temp.getStart_date(), temp.getEnd_date()};
                    model.addRow(row);
                }
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnDel1;
    private javax.swing.JButton btnDel2;
    private javax.swing.JButton btnDel3;
    private javax.swing.JButton btnDel4;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnNew1;
    private javax.swing.JButton btnNew2;
    private javax.swing.JButton btnNew3;
    private javax.swing.JButton btnNew4;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSave1;
    private javax.swing.JButton btnSave2;
    private javax.swing.JButton btnSave3;
    private javax.swing.JButton btnSave4;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSearch1;
    private javax.swing.JButton btnSearch2;
    private javax.swing.JButton btnSearch3;
    private javax.swing.JButton btnSort;
    private javax.swing.JButton btnSort1;
    private javax.swing.JButton btnSort2;
    private javax.swing.JButton btnSort3;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpdate1;
    private javax.swing.JButton btnUpdate2;
    private javax.swing.JButton btnUpdate3;
    private javax.swing.JButton btnUpdate4;
    private javax.swing.JCheckBox chkDes;
    private javax.swing.JCheckBox chkDes1;
    private javax.swing.JCheckBox chkDes2;
    private javax.swing.JCheckBox chkDes3;
    private javax.swing.JComboBox<String> cmbSort;
    private javax.swing.JComboBox<String> cmbSort1;
    private javax.swing.JComboBox<String> cmbSort2;
    private javax.swing.JComboBox<String> cmbSort3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblAvatarGV;
    private javax.swing.JLabel lblAvatarSV;
    private javax.swing.JTable tblGV;
    private javax.swing.JTable tblLophoc;
    private javax.swing.JTable tblMonhoc;
    private javax.swing.JTable tblPH;
    private javax.swing.JTable tblSV;
    private javax.swing.JTextField txtDOBGV;
    private javax.swing.JTextField txtDOBSV;
    private javax.swing.JTextField txtEmailGV;
    private javax.swing.JTextField txtEmailSV;
    private javax.swing.JTextField txtEndDate;
    private javax.swing.JTextField txtGenderGV;
    private javax.swing.JTextField txtGenderSV;
    private javax.swing.JTextField txtLichHoc;
    private javax.swing.JTextField txtLopSV;
    private javax.swing.JTextField txtLophoc;
    private javax.swing.JTextField txtMaGV;
    private javax.swing.JTextField txtMaPhong;
    private javax.swing.JTextField txtMaSV;
    private javax.swing.JTextField txtMalop;
    private javax.swing.JTextField txtMamon;
    private javax.swing.JTextArea txtMoTaGV;
    private javax.swing.JTextField txtMonGV;
    private javax.swing.JTextField txtMonhoc;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtSearch1;
    private javax.swing.JTextField txtSearch2;
    private javax.swing.JTextField txtSearch3;
    private javax.swing.JTextField txtStartDate;
    private javax.swing.JTextField txtTenGV;
    private javax.swing.JTextField txtTenGVPH;
    private javax.swing.JTextField txtTenLopPH;
    private javax.swing.JTextField txtTenSV;
    // End of variables declaration//GEN-END:variables
}
